- defaults:
    link:
      relink: true
      create: true

- clean: ['~', '~/bin']

- shell:
  - [git submodule update --init --recursive, Installing submodules]
  -
    description: Create config directory for zsh
    command: mkdir -p $HOME/.zsh
  - 
    description: Install oh-my-zsh
    command: if [ ! -d "$HOME/.oh-my-zsh" ]; then sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"; fi
    stdout: true
    stderr: true
  -
    description: Install zsh pure theme
    command: if [ ! -d "$HOME/.zsh/pure" ]; then git clone https://github.com/sindresorhus/pure.git "$HOME/.zsh/pure"; fi
  -
    description: Installing Homebrew and Essential Packages
    command: ./macos/setup-homebrew.sh
    stdout: true
    stderr: true
  -
    description: Downloading vim-plug to ~/.vim/autoload/plug.vim
    command: curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    stdout: true
    stderr: true
  -
    description: Downloading plugin manager for nvim
    command: curl -fLo ~/.config/nvim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    stdout: true
    stderr: true
  # -
  #   description: Install Nix
  #   command: if [ "$(uname)" = "Linux" ]; then curl -L https://nixos.org/nix/install | sh -s -- --daemon; else curl -L https://nixos.org/nix/install | sh; fi
  -
    description: Install antigen
    command: curl -L git.io/antigen > ~/.zsh/antigen.zsh

- link:
    # ~/.dotfiles: ''
    
    ~/.gitconfig: 
      path: git/gitconfig
      force: true
        
    ~/.git-completion.bash:
      path: shell/bash/git-completion.bash
      force: true

    # ~/.vimrc: vim/vimrc
    ~/.config/nvim:
      path: nvim
      force: true

    # ~/.zshrc:
    #   path: zsh/zshrc.zsh
    #   force: true
    # ~/.oh-my-zsh: zsh/oh-my-zsh
    # ~/.zgenom: zsh/zgenom
    # ~/.asdfrc: zsh/asdfrc
    # ~/.hushlogin: zsh/hushlogin

    ~/.aliases:
      path: shell/.aliases
      force: true

    ~/.bashrc:
      path: shell/bash/bashrc
      force: true
        
    ~/.bash_profile:
      path: shell/bash/bash_profile
      force: true
        
    ~/.inputrc:
      path: shell/inputrc
      force: true
        
    ~/.zshrc:
      path: shell/zsh/zshrc
      force: true

    # ~/.prettierrc.js:
    #   path: node/prettierrc.js
    # 
    # ~/.phoenix.js:
    #   path: phoenix/dist/phoenix.js
    #   force: true

    # ~/bin:
    #   glob: true
    #   path: scripts/*
    #   relink: true

    # VS Code Linux
    # ~/.config/Code/User:
    #   if: '[[ `uname` = Linux ]]'
    #   glob: true
    #   path: vscode/linux/*.json
    #   force: true

    # VS Code MacOS
    ~/Library/Application\ Support/Code/User:
      if: '[ `uname` = Darwin ]'
      glob: true
      path: vscode/macos/*.json
      force: true

    ~/Library/Application\ Support/Code/User/snippets:
      if: '[ `uname` = Darwin ]'
      path: vscode/snippets
      force: true

    # VS Code MacOS Insiders
    # ~/Library/Application\ Support/Code - Insiders/User:
    #   if: '[ `uname` = Darwin ]'
    #   glob: true
    #   path: vscode/macos/*.json
    #   force: true

    # ~/.hammerspoon:
    #   if: '[ `uname` = Darwin ]'
    #   path: hammerspoon
    #   force: true

    # ~/Library/Application Support/com.colliderli.iina/input_conf/YouTube.conf:
    #   if: '[ `uname` = Darwin ]'
    #   path: iina/YouTube.conf
    #   force: true
    # 
    # ~/Library/Application Support/espanso:
    #   if: '[ `uname` = Darwin ]'
    #   path: espanso
    #   force: true

# - asdf:
#   - plugin: nodejs
#     url: https://github.com/asdf-vm/asdf-nodejs
#     global: lts-gallium
#     versions:
#       - lts-carbon
#       - lts-dubnium
#       - lts-erbium
#       - lts-fermium
#       - lts-gallium
#       - latest
#   - plugin: yarn
#     url: https://github.com/twuni/asdf-yarn
#     global: latest
#     versions:
#       - latest
#   - plugin: golang
#     url: https://github.com/kennyp/asdf-golang

# - shell:
#   -
#     command: chsh -s $(which zsh)
#     description: Changing default shell to zsh
#     stdout: true
#     stderr: true
